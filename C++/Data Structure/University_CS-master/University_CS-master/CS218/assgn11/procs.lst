     1                                 %line 1+1 procs.asm
     2                                 
     3                                 
     4                                 
     5                                 
     6                                 
     7                                 
     8                                 
     9                                 
    10                                 
    11                                 
    12                                 
    13                                 
    14                                 
    15                                 
    16                                 
    17                                 
    18                                 
    19                                 
    20                                 
    21                                 
    22                                 
    23                                 
    24                                 
    25                                 
    26                                 
    27                                 
    28                                 
    29                                 
    30                                 
    31                                 
    32                                 
    33                                 
    34                                 
    35                                 
    36                                 
    37                                 
    38                                 
    39                                 
    40                                 [section .data]
    41                                 
    42                                 
    43                                 
    44                                 
    45                                 LF equ 10
    46                                 NULL equ 0
    47                                 SPACE equ 0x20
    48                                 
    49                                 TRUE equ 1
    50                                 FALSE equ 0
    51                                 
    52                                 SUCCESS equ 0
    53                                 NOSUCCESS equ 1
    54                                 
    55                                 STDIN equ 0
    56                                 STDOUT equ 1
    57                                 STDERR equ 2
    58                                 
    59                                 SYS_read equ 0
    60                                 SYS_write equ 1
    61                                 SYS_open equ 2
    62                                 SYS_close equ 3
    63                                 SYS_fork equ 57
    64                                 SYS_exit equ 60
    65                                 SYS_creat equ 85
    66                                 SYS_time equ 201
    67                                 
    68                                 O_CREAT equ 0x40
    69                                 O_TRUNC equ 0x200
    70                                 O_APPEND equ 0x400
    71                                 
    72                                 O_RDONLY equ 000000
    73                                 O_WRONLY equ 000001
    74                                 O_RDWR equ 000002
    75                                 
    76                                 S_IRUSR equ 00400
    77                                 S_IWUSR equ 00200
    78                                 S_IXUSR equ 00100
    79                                 
    80                                 
    81                                 
    82                                 
    83 00000000 55736167653A202E2F-    usageMsg db "Usage: ./wc -w <searchWord> <-mc|-ic> -f <inputFile>"
    84 00000000 7763202D77203C7365-
    85 00000000 61726368576F72643E-
    86 00000000 203C2D6D637C2D6963-
    87 00000000 3E202D66203C696E70-
    88 00000000 757446696C653E     
    89 00000034 0A00                    db LF, NULL
    90                                 
    91 00000036 4572726F722C20696E-    errbadCLQ db "Error, invalid command line arguments."
    92 00000036 76616C696420636F6D-
    93 00000036 6D616E64206C696E65-
    94 00000036 20617267756D656E74-
    95 00000036 732E               
    96 0000005C 0A00                    db LF, NULL
    97                                 
    98 0000005E 4572726F722C20696E-    errWordSpec db "Error, invalid search word specifier."
    99 0000005E 76616C696420736561-
   100 0000005E 72636820776F726420-
   101 0000005E 737065636966696572-
   102 0000005E 2E                 
   103 00000083 0A00                    db LF, NULL
   104                                 
   105 00000085 4572726F722C207365-    errWordLength db "Error, search word length must be < 80 "
   106 00000085 6172636820776F7264-
   107 00000085 206C656E677468206D-
   108 00000085 757374206265203C20-
   109 00000085 383020             
   110 000000AC 636861726163746572-     db "characters."
   111 000000AC 732E               
   112 000000B7 0A00                    db LF, NULL
   113                                 
   114 000000B9 4572726F722C20696E-    errFileSpec db "Error, invalid input file specifier."
   115 000000B9 76616C696420696E70-
   116 000000B9 75742066696C652073-
   117 000000B9 70656369666965722E 
   118 000000DD 0A00                    db LF, NULL
   119                                 
   120 000000DF 4572726F722C20696E-    errCaseSpec db "Error, invalid match case specifier."
   121 000000DF 76616C6964206D6174-
   122 000000DF 636820636173652073-
   123 000000DF 70656369666965722E 
   124 00000103 0A00                    db LF, NULL
   125                                 
   126 00000105 4572726F722C206361-    errOpenIn db "Error, can not open input file."
   127 00000105 6E206E6F74206F7065-
   128 00000105 6E20696E7075742066-
   129 00000105 696C652E           
   130 00000124 0A00                    db LF, NULL
   131                                 
   132                                 
   133                                 
   134                                 
   135                                 MAXWORDLENGTH equ 80
   136                                 BUFFSIZE equ 250000
   137                                 
   138                                 
   139 00000126 90D0030000000000       bfMax dq BUFFSIZE
   140 0000012E 90D0030000000000       curr dq BUFFSIZE
   141                                 
   142 00000136 00                     wasEOF db FALSE
   143                                 
   144 00000137 4572726F7220726561-    errFileRead db "Error reading input file."
   145 00000137 64696E6720696E7075-
   146 00000137 742066696C652E     
   147 00000150 0A00                    db LF, NULL
   148                                 
   149                                 
   150                                 
   151                                 
   152 00000152 466F756E64202700       resultStart db "Found '", NULL
   153 0000015A 272000                 resultSpace db "' ", NULL
   154 0000015D 2074696D65732E0A00     resultEnd db " times.", LF, NULL
   155                                 
   156                                 
   157                                 
   158                                 [section .bss]
   159                                 
   160 00000000 <gap>                  buff resb BUFFSIZE+1
   161 0003D091 <gap>                  tmpString resb MAXWORDLENGTH+1
   162                                 
   163                                 
   164                                 
   165                                 
   166                                 [section .text]
   167                                 
   168                                 
   169                                 
   170                                 
   171                                 
   172                                 
   173                                 
   174                                 
   175                                 
   176                                 
   177                                 
   178                                 
   179                                 
   180                                 
   181                                 
   182                                 
   183                                 
   184                                 
   185                                 [global checkParameters]
   186                                 checkParameters:
   187 00000000 53                      push rbx
   188 00000001 4154                    push r12
   189 00000003 4155                    push r13
   190                                 
   191 00000005 4D89C5                  mov r13, r8
   192 00000008 4989CC                  mov r12, rcx
   193 0000000B 4883FF01                cmp rdi, 1
   194 0000000F 7516                    jne noUsage
   195 00000011 48C7C7[00000000]        mov rdi, usageMsg
   196 00000018 E82E030000              call printString
   197 0000001D 48C7C000000000          mov rax, FALSE
   198 00000024 E926010000              jmp dn
   199                                  noUsage:
   200 00000029 4883FF06                cmp rdi, 6
   201 0000002D 7416                    je goodArgCount
   202 0000002F 48C7C7[00000000]        mov rdi, errbadCLQ
   203 00000036 E810030000              call printString
   204 0000003B 48C7C000000000          mov rax, FALSE
   205 00000042 E908010000              jmp dn
   206                                  goodArgCount:
   207 00000047 488B5E08                mov rbx, qword[rsi+8]
   208 0000004B 803B2D                  cmp byte[rbx], 0x2D
   209 0000004E 750C                    jne errorWordSpec
   210 00000050 807B0177                cmp byte[rbx+1], 0x77
   211 00000054 7506                    jne errorWordSpec
   212 00000056 807B0200                cmp byte[rbx+2], 0x00
   213 0000005A 7500                    jne errorWordSpec
   214 0000005C EB16                    jmp noErrorWordSpec
   215                                  errorWordSpec:
   216 0000005E 48C7C7[00000000]        mov rdi, errWordSpec
   217 00000065 E8E1020000              call printString
   218 0000006A 48C7C000000000          mov rax, FALSE
   219 00000071 E9D9000000              jmp dn
   220                                  noErrorWordSpec:
   221 00000076 488B5E10                mov rbx, qword[rsi+16]
   222 0000007A 4D31DB                  xor r11, r11
   223 0000007D 4D31D2                  xor r10, r10
   224                                  length:
   225 00000080 468A1C13                mov r11b, byte[rbx+r10]
   226 00000084 4180FB00                cmp r11b, NULL
   227 00000088 7409                    je endLength
   228 0000008A 44881A                  mov byte[rdx], r11b
   229 0000008D 48FFC2                  inc rdx
   230 00000090 49FFC2                  inc r10
   231 00000093 EBE9                    jmp length
   232                                  endLength:
   233 00000095 C60200                  mov byte[rdx], NULL
   234 00000098 4983FA50                cmp r10, MAXWORDLENGTH
   235 0000009C 7216                    jb goodLength
   236 0000009E 48C7C7[00000000]        mov rdi, errWordLength
   237 000000A5 E8A1020000              call printString
   238 000000AA 48C7C000000000          mov rax, FALSE
   239 000000B1 E999000000              jmp dn
   240                                  goodLength:
   241 000000B6 488B5E18                mov rbx, qword[rsi+24]
   242 000000BA 813B2D6D6300            cmp dword[rbx], 0x00636D2D
   243 000000C0 7505                    jne checkTwo
   244 000000C2 41C6042401              mov byte[r12], TRUE
   245 000000C7 EB20                    jmp caseGood
   246                                  checkTwo:
   247 000000C9 813B2D696300            cmp dword[rbx], 0x0063692D
   248 000000CF 7418                    je caseGood
   249 000000D1 48C7C7[00000000]        mov rdi, errCaseSpec
   250 000000D8 E86E020000              call printString
   251 000000DD 48C7C000000000          mov rax, FALSE
   252 000000E4 EB6C                    jmp dn
   253 000000E6 41C6042400              mov byte[r12], FALSE
   254                                  caseGood:
   255 000000EB 488B5E20                mov rbx, qword[rsi+32]
   256 000000EF 803B2D                  cmp byte[rbx], 0x2D
   257 000000F2 750C                    jne fileSpecError
   258 000000F4 807B0166                cmp byte[rbx+1], 0x66
   259 000000F8 7506                    jne fileSpecError
   260 000000FA 807B0200                cmp byte[rbx+2], 0x00
   261 000000FE 7500                    jne fileSpecError
   262 00000100 EB13                    jmp goodFileSpec
   263                                  fileSpecError:
   264 00000102 48C7C7[00000000]        mov rdi, errFileSpec
   265 00000109 E83D020000              call printString
   266 0000010E 48C7C000000000          mov rax, FALSE
   267 00000115 EB3B                    jmp dn
   268                                  goodFileSpec:
   269 00000117 488B5E28                mov rbx, qword[rsi+40]
   270 0000011B 48C7C002000000          mov rax, SYS_open
   271 00000122 4889DF                  mov rdi, rbx
   272 00000125 48C7C600000000          mov rsi, O_RDONLY
   273 0000012C 0F05                    syscall
   274 0000012E 4883F800                cmp rax, 0
   275 00000132 7D13                    jge noError
   276 00000134 48C7C7[00000000]        mov rdi, errOpenIn
   277 0000013B E80B020000              call printString
   278 00000140 48C7C000000000          mov rax, FALSE
   279 00000147 EB09                    jmp dn
   280                                  noError:
   281 00000149 41894500                mov dword[r13], eax
   282 0000014D 48C7C001000000          mov rax, TRUE
   283                                  dn:
   284 00000154 415D                    pop r13
   285 00000156 415C                    pop r12
   286 00000158 5B                      pop rbx
   287 00000159 C3                      ret
   288                                 
   289                                 
   290                                 
   291                                 
   292                                 
   293                                 
   294                                 
   295                                 
   296                                 
   297                                 
   298                                 
   299                                 
   300                                 
   301                                 
   302                                 
   303                                 
   304                                 
   305                                 
   306                                 
   307                                 
   308                                 
   309                                 
   310                                 
   311                                 
   312                                 
   313                                 [global getWord]
   314                                 getWord:
   315 0000015A 53                      push rbx
   316 0000015B 4154                    push r12
   317 0000015D 4155                    push r13
   318 0000015F 4156                    push r14
   319                                 
   320 00000161 4889FB                  mov rbx, rdi
   321 00000164 4989F6                  mov r14, rsi
   322 00000167 4D31C0                  xor r8, r8
   323                                 
   324                                  reBuffer:
   325 0000016A 4C8B1425[00000000]      mov r10, qword[bfMax]
   326 00000172 4C391425[00000000]      cmp qword[curr], r10
   327 0000017A 726F                    jb underBuffSize
   328 0000017C 803C25[00000000]01      cmp byte[wasEOF], TRUE
   329 00000184 750A                    jne notEOF
   330 00000186 48C7C000000000          mov rax, FALSE
   331 0000018D E9CD000000              jmp _dn
   332                                  notEOF:
   333 00000192 48C7C000000000          mov rax, SYS_read
   334 00000199 4C89F7                  mov rdi, r14
   335 0000019C 48C7C6[00000000]        mov rsi, buff
   336 000001A3 48C7C290D00300          mov rdx, BUFFSIZE
   337 000001AA 0F05                    syscall
   338                                 
   339 000001AC 4883F800                cmp rax, 0
   340 000001B0 7D16                    jge readFine
   341 000001B2 48C7C0[00000000]        mov rax, errFileRead
   342 000001B9 E88D010000              call printString
   343 000001BE 48C7C000000000          mov rax, FALSE
   344 000001C5 E995000000              jmp _dn
   345                                  readFine:
   346                                 
   347 000001CA 483D90D00300            cmp rax, BUFFSIZE
   348 000001D0 740E                    je notEof
   349 000001D2 C60425[00000000]01      mov byte[wasEOF], TRUE
   350 000001DA 48890425[00000000]      mov qword[bfMax], rax
   351                                  notEof
   352 000001E2 4D31D2                  xor r10, r10
   353 000001E5 4C891425[00000000]      mov qword[curr], r10
   354                                  underBuffSize:
   355                                 
   356 000001ED 4D31C9                  xor r9, r9
   357 000001F0 4D31DB                  xor r11, r11
   358 000001F3 49C7C4[00000000]        mov r12, buff
   359 000001FA 4C8B0C25[00000000]      mov r9, qword[curr]
   360                                 
   361                                  getNextWord:
   362 00000202 478A1C0C                mov r11b, byte[r12+r9]
   363 00000206 4180FB20                cmp r11b, 0x20
   364 0000020A 7612                    jbe endNextWord
   365 0000020C 4983F850                cmp r8, MAXWORDLENGTH
   366 00000210 7323                    jae ignoreSpaces
   367 00000212 44881B                  mov byte[rbx], r11b
   368 00000215 48FFC3                  inc rbx
   369 00000218 49FFC1                  inc r9
   370 0000021B 49FFC0                  inc r8
   371 0000021E EBE0                    jmp getNextWord
   372                                  endNextWord:
   373                                 
   374 00000220 4C3B0C25[00000000]      cmp r9, qword[bfMax]
   375 00000228 720B                    jb noReBuffer
   376 0000022A 4C890C25[00000000]      mov qword[curr], r9
   377 00000232 E92EFFFFFF              jmp reBuffer
   378                                  noReBuffer:
   379                                 
   380                                 
   381                                  ignoreSpaces:
   382 00000237 478A1C0C                mov r11b, byte[r12+r9]
   383 0000023B 4180FB2F                cmp r11b, 0x2F
   384 0000023F 740A                    je _inc
   385 00000241 4180FB20                cmp r11b, 0x20
   386 00000245 7709                    ja endIgnoreSpaces
   387 00000247 4180FB00                cmp r11b, 0x00
   388 0000024B 7403                    je endIgnoreSpaces
   389                                  _inc:
   390 0000024D 49FFC1                  inc r9
   391 00000250 EBE3                    jmp ignoreSpaces
   392                                  endIgnoreSpaces:
   393                                 
   394 00000252 C60300                  mov byte[rbx], NULL
   395 00000255 4C890C25[00000000]      mov qword[curr], r9
   396 0000025D 48C7C001000000          mov rax, TRUE
   397                                  _dn:
   398 00000264 415E                    pop r14
   399 00000266 415D                    pop r13
   400 00000268 415C                    pop r12
   401 0000026A 5B                      pop rbx
   402 0000026B C3                      ret
   403                                 
   404                                 
   405                                 
   406                                 
   407                                 
   408                                 
   409                                 
   410                                 
   411                                 
   412                                 
   413                                 
   414                                 
   415                                 
   416                                 
   417                                 
   418                                 [global checkWord]
   419                                 checkWord:
   420 0000026C 53                      push rbx
   421                                 
   422 0000026D 4D31DB                  xor r11, r11
   423 00000270 4D31E4                  xor r12, r12
   424                                  wordLoop:
   425 00000273 448A1F                  mov r11b, byte[rdi]
   426 00000276 448A26                  mov r12b, byte[rsi]
   427 00000279 4883FA01                cmp rdx, TRUE
   428 0000027D 741E                    je contCompare
   429 0000027F 4180FB41                cmp r11b, 0x41
   430 00000283 7208                    jb skipSearchWrd
   431 00000285 4180FB5A                cmp r11b, 0x5A
   432 00000289 7702                    ja skipSearchWrd
   433 0000028B 4180C320                add r11b, 0x20
   434                                  skipSearchWrd:
   435 0000028F 4180FC41                cmp r12b, 0x41
   436 00000293 7208                    jb skipCurrentWrd
   437 00000295 4180FC5A                cmp r12b, 0x5A
   438 00000299 7702                    ja skipCurrentWrd
   439 0000029B 4180C420                add r12b, 0x20
   440                                  skipCurrentWrd:
   441                                  contCompare:
   442 0000029F 4538E3                  cmp r11b, r12b
   443 000002A2 7512                    jne endWordLoop
   444 000002A4 4180FB00                cmp r11b, NULL
   445 000002A8 7406                    je endWordLoopInc
   446 000002AA 48FFC7                  inc rdi
   447 000002AD 48FFC6                  inc rsi
   448 000002B0 EBBF                    jmp wordLoop
   449                                  endWordLoopInc:
   450 000002B2 8B19                    mov ebx, dword[rcx]
   451 000002B4 FFC3                    inc ebx
   452 000002B6 8919                    mov dword[rcx], ebx
   453                                  endWordLoop:
   454                                 
   455 000002B8 5B                      pop rbx
   456 000002B9 C3                      ret
   457                                 
   458                                 
   459                                 
   460                                 
   461                                 
   462                                 
   463                                 
   464                                 
   465                                 
   466                                 
   467                                 
   468                                 
   469                                 
   470                                 
   471                                 
   472                                 [global displayResults]
   473                                 displayResults:
   474 000002BA 53                      push rbx
   475 000002BB 4154                    push r12
   476                                 
   477 000002BD 4989F4                  mov r12, rsi
   478 000002C0 4889FB                  mov rbx, rdi
   479                                 
   480 000002C3 48C7C7[00000000]        mov rdi, resultStart
   481 000002CA E87C000000              call printString
   482 000002CF 4889DF                  mov rdi, rbx
   483 000002D2 E874000000              call printString
   484 000002D7 48C7C7[00000000]        mov rdi, resultSpace
   485 000002DE E868000000              call printString
   486                                 
   487 000002E3 4489E0                  mov eax, r12d
   488 000002E6 48C7C606000000          mov rsi, 6
   489 000002ED 49C7C230000000          mov r10, 0x30
   490 000002F4 48C7C100000000          mov rcx, 0
   491 000002FB 49C7C1[00000000]        mov r9, tmpString
   492                                  int2senaryloop1:
   493 00000302 BA00000000              mov edx, 0
   494 00000307 F7F6                    div esi
   495 00000309 48FFC1                  inc rcx
   496 0000030C 83F800                  cmp eax, 0
   497 0000030F 75EF                    jne int2senaryloop1
   498 00000311 4489E0                  mov eax, r12d
   499 00000314 4901C9                  add r9, rcx
   500 00000317 41C60100                mov byte[r9], NULL
   501 0000031B 49FFC9                  dec r9
   502                                  int2senaryloop2:
   503 0000031E BA00000000              mov edx, 0
   504 00000323 F7F6                    div esi
   505 00000325 4401D2                  add edx, r10d
   506 00000328 418811                  mov byte[r9], dl
   507 0000032B 49FFC9                  dec r9
   508 0000032E 83F800                  cmp eax, 0
   509 00000331 75E9                    jne int2senaryloop2
   510                                 
   511 00000333 4831FF                  xor rdi, rdi
   512 00000336 BF[00000000]            mov edi, tmpString
   513 0000033B E80B000000              call printString
   514                                 
   515 00000340 48C7C7[00000000]        mov rdi, resultEnd
   516 00000347 E8FFFFFFFF              call printString
   517                                 
   518 0000034C 415C                    pop r12
   519 0000034E 5B                      pop rbx
   520 0000034F C3                      ret
   521                                 
   522                                 
   523                                 
   524                                 
   525                                 
   526                                 
   527                                 
   528                                 
   529                                 
   530                                 
   531                                 
   532                                 
   533                                 
   534                                 
   535                                 
   536                                 
   537                                 
   538                                 
   539                                 [global printString]
   540                                 printString:
   541                                 
   542                                 
   543                                 
   544                                 
   545 00000350 48C7C200000000          mov rdx, 0
   546                                 strCountLoop:
   547 00000357 803C1700                cmp byte [rdi+rdx], NULL
   548 0000035B 7403                    je strCountLoopDone
   549 0000035D 48FFC2                  inc rdx
   550 00000360 EBF3                    jmp strCountLoop
   551                                 strCountLoopDone:
   552 00000362 4883FA00                cmp rdx, 0
   553 00000366 7411                    je printStringDone
   554                                 
   555                                 
   556                                 
   557                                 
   558 00000368 48C7C001000000          mov rax, SYS_write
   559 0000036F 4889FE                  mov rsi, rdi
   560 00000372 48C7C701000000          mov rdi, STDOUT
   561                                 
   562 00000379 0F05                    syscall
   563                                 
   564                                 
   565                                 
   566                                 
   567                                 printStringDone:
   568 0000037B C3                      ret
   569                                 
   570                                 
   571                                 
   572                                 
